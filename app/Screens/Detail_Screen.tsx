// import { RouteProp } from '@react-navigation/native';

// import React from 'react';
// import { View, Text, Image, ScrollView, TouchableOpacity, StyleSheet, FlatList,Dimensions } from 'react-native';
// import { Item } from '../Model/Item_Type';


// interface DetailScreenProps {
//   route: RouteProp<{ params: { item: Item } }, 'params'>;
// }


// const Detail_Screen: React.FC<DetailScreenProps> = ({ route }) => {

//   const { width } = Dimensions.get('window');
//   return (
//     <ScrollView style={styles.container}>


//       <FlatList
//         data={route.params.item.images}
//         renderItem={({ item }) => (
//           <Image source={{ uri: item.uri }} style={{ width: width, height: 200 }} />
//         )}
//         keyExtractor={(item, index) => index.toString()}
//         horizontal
//         showsHorizontalScrollIndicator={false}
//         snapToInterval={width} // M·ªói l·∫ßn vu·ªët s·∫Ω "snap" v√†o ƒë√∫ng m·ªôt item
//         decelerationRate='fast'      // Gi·∫£m t·ªëc ƒë·ªô cu·ªôn nhanh ch√≥ng ƒë·ªÉ d·ª´ng l·∫°i ngay sau khi vu·ªët
//         snapToAlignment="start"      // CƒÉn ch·ªânh b·∫Øt ƒë·∫ßu ·ªü m·ªói ·∫£nh
//       />


//       <View style={styles.header}>
//         <Text style={styles.title}>{route.params.item.title}</Text>

//         <View style={styles.userInfo}>
//           <Image
//             source={{ uri: 'https://via.placeholder.com/40x40' }}
//             style={styles.avatar}
//           />
//           <Text style={styles.userName}>Tr·∫ßn Kh√°nh Huy·ªÅn</Text>
//         </View>
//       </View>

//       {/* Property Details Grid */}
//       <View style={styles.detailsGrid}>
//         <View style={styles.detailItem}>
//           <Text style={styles.icon}>üè†</Text>
//           <Text style={styles.detailLabel}>{route.params.item.category}</Text>
//         </View>
//         <View style={styles.detailItem}>
//           <Text style={styles.icon}>üë•</Text>
//           <Text style={styles.detailLabel}>{route.params.item.maxOccupants} ng∆∞·ªùi</Text>
//         </View>
//         <View style={styles.detailItem}>
//           <Text style={styles.icon}>üìê</Text>
//           <Text style={styles.detailLabel}>{route.params.item.acreage} m¬≤</Text>
//         </View>
//         <View style={styles.detailItem}>
//           <Text style={styles.icon}>üõèÔ∏è</Text>
//           <Text style={styles.detailLabel}>{route.params.item.bedRoom} Ph√≤ng ng·ªß</Text>
//         </View>
//         <View style={styles.detailItem}>
//           <Text style={styles.icon}>üç≥</Text>
//           <Text style={styles.detailLabel}>{route.params.item.kitchen} Ph√≤ng b·∫øp</Text>
//         </View>
//         <View style={styles.detailItem}>
//           <Text style={styles.icon}>üöó</Text>
//           <Text style={styles.detailLabel}>{route.params.item.parking}</Text>
//         </View>
//       </View>

//       {/* Additional Info */}
//       <View style={styles.additionalInfo}>
//         <Text style={styles.sectionTitle}>Th√¥ng tin m√¥ t·∫£</Text>
//         <View style={styles.infoList}>
//            <Text style={styles.infoItem}>{route.params.item.description}</Text>
//         </View>
//       </View>

//       {/* Price and Contact Button */}
//       <View style={styles.footer}>
//         <Text style={styles.price}>{route.params.item.price} ƒë</Text>
//         <TouchableOpacity style={styles.contactButton}>
//           <Text style={styles.contactButtonText}>Li√™n h·ªá</Text>
//         </TouchableOpacity>
//       </View>
//     </ScrollView>
//   )


// }

// export default Detail_Screen;

// const styles = StyleSheet.create({
//   container: {
//     flex: 1,
//     backgroundColor: '#fff',
//   },
//   mainImage: {
//     width: '100%',
//     height: 250,
//     resizeMode: 'cover',
//   },
//   header: {
//     padding: 16,
//   },
//   title: {
//     fontSize: 18,
//     fontWeight: 'bold',
//     marginBottom: 12,
//   },
//   userInfo: {
//     flexDirection: 'row',
//     alignItems: 'center',
//   },
//   avatar: {
//     width: 40,
//     height: 40,
//     borderRadius: 20,
//     marginRight: 8,
//   },
//   userName: {
//     fontSize: 16,
//     color: '#666',
//   },
//   detailsGrid: {
//     flexDirection: 'row',
//     flexWrap: 'wrap',
//     padding: 16,
//     borderTopWidth: 1,
//     borderBottomWidth: 1,
//     borderColor: '#eee',
//   },
//   detailItem: {
//     width: '33.33%',
//     alignItems: 'center',
//     marginBottom: 16,
//   },
//   icon: {
//     fontSize: 24,
//     marginBottom: 4,
//   },
//   detailLabel: {
//     fontSize: 12,
//     color: '#666',
//     textAlign: 'center',
//   },
//   additionalInfo: {
//     padding: 16,
//   },
//   sectionTitle: {
//     fontSize: 16,
//     fontWeight: 'bold',
//     marginBottom: 12,
//   },
//   infoList: {
//     gap: 8,
//   },
//   infoItem: {
//     fontSize: 14,
//     color: '#666',
//     lineHeight: 20,
//   },
//   footer: {
//     padding: 16,
//     flexDirection: 'row',
//     justifyContent: 'space-between',
//     alignItems: 'center',
//     borderTopWidth: 1,
//     borderColor: '#eee',

//   },
//   price: {
//     fontSize: 20,
//     fontWeight: 'bold',
//     color: '#000',
//   },
//   contactButton: {
//     backgroundColor: '#ff5722',
//     paddingHorizontal: 24,
//     paddingVertical: 12,
//     borderRadius: 8,
//   },
//   contactButtonText: {
//     color: '#fff',
//     fontSize: 16,
//     fontWeight: 'bold',
//   },
// });
import { RouteProp } from '@react-navigation/native';
import React, { useState } from 'react';
import { View, Text, Image, ScrollView, TouchableOpacity, StyleSheet, FlatList, Dimensions, Modal } from 'react-native';
import { Item } from '../Model/Item_Type';
import ImageViewer from 'react-native-image-zoom-viewer';

interface DetailScreenProps {
  route: RouteProp<{ params: { item: Item } }, 'params'>;
}

const Detail_Screen: React.FC<DetailScreenProps> = ({ route }) => {
  const { width } = Dimensions.get('window');
  const [modalVisible, setModalVisible] = useState(false);  // Tr·∫°ng th√°i m·ªü/ƒë√≥ng Modal
  const [selectedImageIndex, setSelectedImageIndex] = useState(0);  // L∆∞u ch·ªâ s·ªë ·∫£nh ƒë∆∞·ª£c ch·ªçn
  const images = route.params.item.images.map((item) => ({
    url: item.uri,
  }));
  const openImageModal = (index:number) => {
    setSelectedImageIndex(index);
    setModalVisible(true);
  };


  return (
    <View style={styles.container}>
      {/* N·ªôi dung cu·ªôn trong ScrollView */}
      <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollContent}>
        {/* <FlatList
          data={route.params.item.images}
          renderItem={({ item }) => (
            <Image source={{ uri: item.uri }} style={{ width: width, height: 200 }} />
          )}
          keyExtractor={(item, index) => index.toString()}
          horizontal
          showsHorizontalScrollIndicator={false}
          snapToInterval={width} // M·ªói l·∫ßn vu·ªët s·∫Ω "snap" v√†o ƒë√∫ng m·ªôt item
          decelerationRate="fast" // Gi·∫£m t·ªëc ƒë·ªô cu·ªôn nhanh ch√≥ng ƒë·ªÉ d·ª´ng l·∫°i ngay sau khi vu·ªët
          snapToAlignment="start" // CƒÉn ch·ªânh b·∫Øt ƒë·∫ßu ·ªü m·ªói ·∫£nh
        /> */}

<FlatList
        data={route.params.item.images}
        renderItem={({ item, index }) => (
          <TouchableOpacity onPress={() => openImageModal(index)}>
            <Image source={{ uri: item.uri }} style={{ width: width, height: 200 }} />
          </TouchableOpacity>
        )}
        keyExtractor={(item, index) => index.toString()}
        horizontal
        showsHorizontalScrollIndicator={false}
        snapToInterval={width} // M·ªói l·∫ßn vu·ªët s·∫Ω "snap" v√†o ƒë√∫ng m·ªôt item
        decelerationRate="fast" // Gi·∫£m t·ªëc ƒë·ªô cu·ªôn nhanh ch√≥ng ƒë·ªÉ d·ª´ng l·∫°i ngay sau khi vu·ªët
        snapToAlignment="start" // CƒÉn ch·ªânh b·∫Øt ƒë·∫ßu ·ªü m·ªói ·∫£nh
      />

        <View style={styles.header}>
          <Text style={styles.title}>{route.params.item.title}</Text>

          <View style={styles.userInfo}>
            <Image
              source={{ uri: 'https://via.placeholder.com/40x40' }}
              style={styles.avatar}
            />
            <Text style={styles.userName}>Tr·∫ßn Kh√°nh Huy·ªÅn</Text>
          </View>
        </View>

        {/* Property Details Grid */}
        <View style={styles.detailsGrid}>
          <View style={styles.detailItem}>
            <Text style={styles.icon}>üè†</Text>
            <Text style={styles.detailLabel}>{route.params.item.category}</Text>
          </View>
          <View style={styles.detailItem}>
            <Text style={styles.icon}>üë•</Text>
            <Text style={styles.detailLabel}>{route.params.item.maxOccupants} ng∆∞·ªùi</Text>
          </View>
          <View style={styles.detailItem}>
            <Text style={styles.icon}>üìê</Text>
            <Text style={styles.detailLabel}>{route.params.item.acreage} m¬≤</Text>
          </View>
          <View style={styles.detailItem}>
            <Text style={styles.icon}>üõèÔ∏è</Text>
            <Text style={styles.detailLabel}>{route.params.item.bedRoom} Ph√≤ng ng·ªß</Text>
          </View>
          <View style={styles.detailItem}>
            <Text style={styles.icon}>üç≥</Text>
            <Text style={styles.detailLabel}>{route.params.item.kitchen} Ph√≤ng b·∫øp</Text>
          </View>
          <View style={styles.detailItem}>
            <Text style={styles.icon}>üöó</Text>
            <Text style={styles.detailLabel}>{route.params.item.parking}</Text>
          </View>
        </View>

        {/* Additional Info */}
        <View style={styles.additionalInfo}>
          <Text style={styles.sectionTitle}>Th√¥ng tin m√¥ t·∫£</Text>
          <View style={styles.infoList}>
            <Text style={styles.infoItem}>{route.params.item.description}</Text>
          </View>
        </View>
      </ScrollView>

      {/* Footer */}
      <View style={styles.footer}>
        <Text style={styles.price}>{route.params.item.price} ƒë</Text>
        <TouchableOpacity style={styles.contactButton}>
          <Text style={styles.contactButtonText}>Li√™n h·ªá</Text>
        </TouchableOpacity>
      </View>

      {/* Modal hi·ªÉn th·ªã ·∫£nh l·ªõn */}
      <Modal
        visible={modalVisible}
        transparent={true}
        onRequestClose={() => setModalVisible(false)}  // ƒê√≥ng modal khi b·∫•m n√∫t back tr√™n Android
      >
        <View style={styles.modalContainer}>
          <ImageViewer
            imageUrls={images}
            index={selectedImageIndex} // Ch·ªâ s·ªë ·∫£nh ƒë∆∞·ª£c ch·ªçn
            onSwipeDown={() => setModalVisible(false)} // ƒê√≥ng modal khi vu·ªët xu·ªëng
            enableSwipeDown
          />
        </View>
      </Modal>
    </View>
  );
};

export default Detail_Screen;

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
  },
  scrollView: {
    flexGrow: 1, // ƒê·∫£m b·∫£o n·ªôi dung chi·∫øm ph·∫ßn c√≤n l·∫°i c·ªßa kh√¥ng gian
  },
  scrollContent: {
    paddingBottom: 80, // ƒê·∫£m b·∫£o kh√¥ng gian cho footer khi cu·ªôn
  },
  header: {
    padding: 16,
  },
  title: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 12,
  },
  userInfo: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  avatar: {
    width: 40,
    height: 40,
    borderRadius: 20,
    marginRight: 8,
  },
  userName: {
    fontSize: 16,
    color: '#666',
  },
  detailsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    padding: 16,
    borderTopWidth: 1,
    borderBottomWidth: 1,
    borderColor: '#eee',
  },
  detailItem: {
    width: '33.33%',
    alignItems: 'center',
    marginBottom: 16,
  },
  icon: {
    fontSize: 24,
    marginBottom: 4,
  },
  detailLabel: {
    fontSize: 12,
    color: '#666',
    textAlign: 'center',
  },
  additionalInfo: {
    padding: 16,
  },
  sectionTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    marginBottom: 12,
  },
  infoList: {
    gap: 8,
  },
  infoItem: {
    fontSize: 14,
    color: '#666',
    lineHeight: 20,
  },
  footer: {
    padding: 16,
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    borderTopWidth: 1,
    borderColor: '#eee',
    backgroundColor: '#fff', // ƒê·∫£m b·∫£o footer c√≥ n·ªÅn
  },
  price: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#000',
  },
  contactButton: {
    backgroundColor: '#ff5722',
    paddingHorizontal: 24,
    paddingVertical: 12,
    borderRadius: 8,
  },
  contactButtonText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: 'bold',
  },
  modalContainer: {
    flex: 1,
    backgroundColor: 'rgba(0, 0, 0, 0.8)',  // M√†u n·ªÅn t·ªëi ƒë·ªÉ l√†m n·ªïi b·∫≠t ·∫£nh
  },
});

